
var mongodb = require('mongodb');
var ObjectID = mongodb.ObjectID;
var crypto = require('crypto');
var express = require('express');
var bodyParser = require('body-parser');

// password utils
// create function to generate random salt
var genRandomString = function(length) {
  return crypto.randomBytes(Math.ceil(length / 2))
    .toString('hex') // convert to hex format
    .slice(0, length); // return a string
};

var sha512 = function(password, salt) {
  var hash = crypto.createHmac('sha512', salt); // use salt as the key
  hash.update(password);
  var value = hash.digest('hex');
  return {
    salt: salt,
    passwordHash: value
  };
};

function saltHashPassword(userPassword) {
  var salt = genRandomString(16);
  var passwordData = sha512(userPassword, salt);
  return passwordData;
}

function checkHashPassword(userPassword, salt) {
  var passwordData = sha512(userPassword, salt);
  return passwordData;
}

// create express service
var app = express();
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

// ... (other imports and code)

const { MongoClient } = require('mongodb');

// Connection URL and Database Name
const url = 'mongodb://127.0.0.1:27017';
const databaseName = 'edmtdevnodejs';
const client = new MongoClient(url);

async function dbConnect() {
  try {
    await client.connect();
    const db = client.db(databaseName);
    console.log('Connected to the database successfully');
    return db.collection('user');
  } catch (error) {
    console.error('Error connecting to the database:', error);
    throw error;
  }
}

// Register 
app.post('/register',(request,response,next)=>{
  var post_data = request.body;

  var plaint_password = post_data.password;
  var hash_data = saltHashPassword(plaint_password);

  var password = hash_data.passwordHash;
  var salt = hash_data.salt;

  var name = post_data.name;
  var email  = post_data.email;

  var insertJson = {
    'email' : email,
    'password' : password,
    'salt' : salt,
     'name' : name
  };
  var db = client.db(databaseName);
  // check email exist or not
  db.collection('user')
   .find({'email':email}).count(function(err,number){
    if(number!=0)
    {
      response.json('Email already exits');
      console.log('Email already exists');
   }else
   {
    //insert data
    db.collection('user')
    .insertOne(insertJson,function(error,res){
      response.json('Registration success');
      console.log('Registration success');
    })
  }
})
});

// login
app.post('/login',(request,response,next)=>{
  var post_data  =request.body;

  var email = post_data.email;
   var userPassword  =post_data.password;

   var db  =client.db(databaseName);
   // check email exists
   db.collection('user')
   .find({'email':email}).count(function(err,number){
    if(number==0){
      response.json('email not exits');
      console.log('email not exists');
    }
    else{
      // insert data
      db.collection('user')
      .findOne({'email':email},function(err,user){
        var salt = user.salt; // get salt form user
        var hashed_password  =checkHashPassword(userPassword,salt).passwordHash;
        var encrypted_password = user.password; // Get password from user
        if(hashed_password == encrypted_password ){
          response.json('Login successful');
          console.log('Login successful');
        }
        else{
          response.json('wrong password');
          console.log('wrong password');
            }
        })
      }
   })
});

const PORT = 7000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
